# Plano Detalhado do Projeto Insight Hub

## üéØ Vis√£o Geral do Sistema

O **Insight Hub** √© uma plataforma completa de monitoramento e an√°lise de frotas veiculares municipais que processa dados telem√°ticos em tempo real para fornecer insights inteligentes sobre performance, conformidade, seguran√ßa e efici√™ncia operacional.

### üèóÔ∏è Arquitetura Atual

**Frontend:**
- React 18 com TypeScript
- Vite como bundler e dev server
- Tailwind CSS para estiliza√ß√£o moderna
- Supabase para autentica√ß√£o e dados
- React Query para gerenciamento de estado

**Backend:**
- FastAPI (Python) - APIs RESTful padronizadas
- PostgreSQL via Supabase
- Sistema de processamento de CSV
- Gera√ß√£o autom√°tica de insights

**Infraestrutura:**
- Supabase como BaaS (Backend as a Service)
- Sistema de upload e processamento de arquivos
- Armazenamento interno em JSON/MD
- Monitoramento de performance integrado

## ‚úÖ Funcionalidades J√° Implementadas

### üìä Dashboard Interativo
- **KPIs em Tempo Real**: M√©tricas principais de frota (tempo ativo, dist√¢ncia, consumo)
- **Gr√°ficos Interativos**: Visualiza√ß√µes de performance com filtros din√¢micos
- **Responsividade**: Interface adaptada para desktop, tablet e mobile
- **Sistema Multi-Cliente**: Suporte din√¢mico a qualquer cliente baseado nos dados do CSV

### üìÅ Sistema de Upload e Processamento
- **Upload de CSV**: Processamento de arquivos com at√© 50MB
- **Valida√ß√£o Autom√°tica**: 25 campos espec√≠ficos validados
- **Processamento em Lote**: At√© 100.000 registros por arquivo
- **Hist√≥rico de Uploads**: Rastreamento completo de arquivos processados

### üîç Sistema de Filtros Avan√ßados
- **Filtros por Cliente**: Sistema din√¢mico baseado nos clientes presentes nos dados
- **Filtros Temporais**: Per√≠odos customiz√°veis
- **Filtros por Ve√≠culo**: An√°lise espec√≠fica por placa
- **Compara√ß√£o de Ve√≠culos**: Sistema de compara√ß√£o entre m√∫ltiplos ve√≠culos

### üß† Gera√ß√£o Autom√°tica de Insights
- **An√°lise de Compliance**: Verifica√ß√£o autom√°tica de conformidade
- **Insights Preditivos**: An√°lises baseadas em padr√µes hist√≥ricos
- **Relat√≥rios Automatizados**: Gera√ß√£o de relat√≥rios em PDF
- **M√©tricas de Efici√™ncia**: An√°lise de performance operacional

## üîÑ Funcionalidades em Desenvolvimento

### üì¶ Sistema de Coleta Autom√°tica
- **Status**: 80% completo
- **Funcionalidade**: Coleta autom√°tica de dados do Supabase
- **Armazenamento**: Sistema interno em JSON/MD
- **Organiza√ß√£o**: Estrutura hier√°rquica por cliente/placa

### üóÇÔ∏è Gerenciamento de Dados
- **Status**: 70% completo
- **Limpeza de Dados**: Bot√µes para deletar dados do Supabase
- **Arquivos Internos**: Sistema de limpeza de arquivos locais
- **Interface**: Painel de gerenciamento de dados

## üìã Funcionalidades Pendentes

### üîß Otimiza√ß√µes de Performance
- **Caching Inteligente**: Sistema de cache para consultas frequentes
- **Lazy Loading**: Carregamento sob demanda de dados
- **Compress√£o**: Otimiza√ß√£o de arquivos e imagens

### üìö Documenta√ß√£o e Testes
- **Manual de Usu√°rio**: Documenta√ß√£o completa de uso
- **Testes Unit√°rios**: Cobertura de testes para componentes
- **Testes E2E**: Testes de integra√ß√£o completos

### üöÄ Funcionalidades Futuras
- **Alertas em Tempo Real**: Notifica√ß√µes de anomalias
- **Machine Learning**: Predi√ß√µes avan√ßadas de manuten√ß√£o
- **API P√∫blica**: Endpoints para integra√ß√£o externa

## üìã Estrutura de Dados do Sistema

### üìÑ Estrutura do Arquivo CSV de Entrada

O sistema processa arquivos CSV com a seguinte estrutura de 25 campos:

1. **Cliente** (texto) - Nome do cliente/empresa
2. **Placa** (texto) - Placa do ve√≠culo
3. **Ativo** (texto) - Identificador do ativo
4. **Data** (data/hora) - Data/hora do evento
5. **Data (GPRS)** (data/hora) - Data/hora de comunica√ß√£o GPRS
6. **Velocidade (Km)** (inteiro) - Velocidade em km/h
7. **Igni√ß√£o** (texto curto) - Status da igni√ß√£o (D/L)
8. **Motorista** (texto) - Identifica√ß√£o do motorista
9. **GPS** (inteiro booleano: 0/1) - Status do GPS
10. **Gprs** (inteiro booleano: 0/1) - Status do GPRS
11. **Localiza√ß√£o** (texto longo) - Coordenadas do ve√≠culo
12. **Endere√ßo** (texto longo) - Endere√ßo convertido
13. **Tipo do Evento** (texto) - Tipo do evento registrado
14. **Cerca** (texto) - Informa√ß√µes de cerca eletr√¥nica
15. **Saida** (texto) - Status das sa√≠das digitais
16. **Entrada** (texto) - Status das entradas digitais
17. **Pacote** (texto) - Informa√ß√µes de pacotes de dados
18. **Od√¥metro do per√≠odo (Km)** (num√©rico decimal) - Km percorridos
19. **Hor√≠metro do per√≠odo** (tempo HH:MM:SS) - Tempo de funcionamento
20. **Hor√≠metro embarcado** (tempo HH:MM:SS) - Contador de horas
21. **Od√¥metro embarcado (Km)** (decimal) - Od√¥metro embarcado
22. **Bateria** (texto curto) - N√≠vel de bateria (ex: 100%)
23. **Imagem** (texto/link/vazio) - Link para imagem se houver
24. **Tens√£o** (decimal) - Tens√£o el√©trica
25. **Bloqueado** (inteiro booleano: 0/1) - Status de bloqueio

### üóÑÔ∏è Estrutura das Tabelas no Supabase

#### üìå Tabela `historico_posicoes`
- **id** (int) - Identificador √∫nico do registro
- **cliente** (string) - Nome do cliente associado
- **placa** (string) - Placa do ve√≠culo
- **ativo** (string) - Identificador do ativo
- **data** (timestamp) - Data/hora do evento
- **data_gprs** (timestamp) - Data/hora de comunica√ß√£o GPRS
- **velocidade_km** (int/float) - Velocidade em km/h
- **ignicao** (string: "L"/"D") - Status da igni√ß√£o
- **motorista** (string) - Identifica√ß√£o do motorista
- **gps** (boolean) - Status do GPS
- **gprs** (boolean) - Status do GPRS
- **localizacao** (string: lat,long) - Coordenadas
- **endereco** (string) - Endere√ßo convertido
- **tipo_evento** (string) - Tipo do evento
- **cerca** (string) - Informa√ß√£o de cerca eletr√¥nica
- **saida** (string) - Status das sa√≠das digitais
- **entrada** (string) - Status das entradas digitais
- **pacote** (string) - Informa√ß√µes de pacotes
- **odometro_periodo_km** (float) - Km percorridos no per√≠odo
- **horimetro_periodo** (float) - Tempo de funcionamento (h)
- **horimetro_embarcado** (string) - Contador de horas
- **odometro_embarcado_km** (float) - Od√¥metro embarcado
- **bateria** (string) - N√≠vel de bateria
- **imagem** (nullable) - Link para imagem
- **tensao** (float/string) - Tens√£o el√©trica
- **bloqueado** (boolean) - Status de bloqueio
- **batch_id** (uuid) - Identificador do lote
- **upload_timestamp** (timestamp) - Data/hora do upload

#### üìå Tabela `uploaded_files`
- **id** (uuid) - Identificador do arquivo
- **cliente** (string) - Cliente vinculado ao arquivo
- **filename** (string) - Nome do arquivo
- **upload_timestamp** (timestamp) - Data/hora do upload
- **total_records** (int) - Total de registros
- **processed_records** (int) - Registros processados
- **status** (string) - Status do processamento
- **created_at** (timestamp) - Data/hora de cria√ß√£o

## üîÑ Fluxo de Dados do Sistema

O sistema segue um fluxo estruturado para processamento de dados:

### 1Ô∏è‚É£ **Upload e Valida√ß√£o**
- Upload de arquivo CSV atrav√©s da interface web
- Valida√ß√£o autom√°tica dos 25 campos obrigat√≥rios
- Verifica√ß√£o de integridade e formato dos dados
- Cria√ß√£o de registro na tabela `uploaded_files`

### 2Ô∏è‚É£ **Processamento e Armazenamento**
- Processamento em lote dos registros do CSV
- Inser√ß√£o dos dados na tabela `historico_posicoes` do Supabase
- Gera√ß√£o de `batch_id` para rastreamento
- Atualiza√ß√£o do status de processamento

### 3Ô∏è‚É£ **Coleta e Organiza√ß√£o Interna**
- Coleta autom√°tica dos dados do Supabase
- Organiza√ß√£o hier√°rquica por cliente/placa
- Armazenamento interno em estrutura JSON/MD
- Cria√ß√£o de mem√≥ria local para acesso r√°pido

### 4Ô∏è‚É£ **An√°lise e Insights**
- Aplica√ß√£o de filtros din√¢micos nos dados
- Gera√ß√£o autom√°tica de insights baseados nos padr√µes
- Cria√ß√£o de visualiza√ß√µes interativas
- Exporta√ß√£o de relat√≥rios em PDF

### üéØ Vantagens desta Arquitetura
- **Escalabilidade**: Suporte a qualquer cliente sem modifica√ß√£o de c√≥digo
- **Performance**: Armazenamento local para consultas r√°pidas
- **Flexibilidade**: Filtros din√¢micos baseados nos dados reais
- **Rastreabilidade**: Hist√≥rico completo de uploads e processamentos
- **Confiabilidade**: Valida√ß√£o rigorosa em m√∫ltiplas camadas

## üéØ Prop√≥sito do Sistema

O **Insight Hub** foi desenvolvido para resolver problemas cr√≠ticos no gerenciamento de frotas municipais:

### üöõ Problemas Resolvidos
- **Falta de Visibilidade**: Monitoramento em tempo real da frota
- **Inefici√™ncia Operacional**: Identifica√ß√£o de padr√µes de uso inadequado
- **Compliance**: Verifica√ß√£o autom√°tica de conformidade regulat√≥ria
- **Manuten√ß√£o Reativa**: Predi√ß√£o de necessidades de manuten√ß√£o
- **Relat√≥rios Manuais**: Automatiza√ß√£o de relat√≥rios gerenciais

### üéØ Objetivos Principais
1. **Reduzir Custos Operacionais** em at√© 25%
2. **Aumentar Efici√™ncia** da frota municipal
3. **Melhorar Compliance** regulat√≥rio
4. **Otimizar Rotas** e consumo de combust√≠vel
5. **Predizer Manuten√ß√µes** preventivas

## üìä Status Atual do Projeto

### ‚úÖ Completamente Implementado (100%)
- Sistema de upload e processamento de CSV
- Dashboard interativo com KPIs
- Filtros avan√ßados por cliente, per√≠odo e ve√≠culo
- Gera√ß√£o autom√°tica de insights
- Compara√ß√£o entre ve√≠culos
- Exporta√ß√£o de relat√≥rios em PDF
- Integra√ß√£o completa com Supabase
- Interface responsiva e moderna

### üîÑ Em Desenvolvimento (75%)
- Sistema de coleta autom√°tica de dados
- Armazenamento interno estruturado
- Gerenciamento avan√ßado de dados
- Otimiza√ß√µes de performance

### üìã Planejado para Pr√≥ximas Vers√µes
- Alertas em tempo real
- Machine Learning para predi√ß√µes
- API p√∫blica para integra√ß√µes
- Mobile app nativo
- M√≥dulo de manuten√ß√£o preditiva

## üöÄ Pr√≥ximos Passos Priorit√°rios

### Curto Prazo (1-2 semanas)
1. **Finalizar Sistema de Coleta**: Completar coleta autom√°tica do Supabase
2. **Implementar Armazenamento**: Estrutura hier√°rquica de dados
3. **Testes de Integra√ß√£o**: Valida√ß√£o completa do sistema

### M√©dio Prazo (1 m√™s)
1. **Otimiza√ß√µes de Performance**: Cache e lazy loading
2. **Documenta√ß√£o Completa**: Manual de usu√°rio
3. **Testes E2E**: Cobertura completa de testes

### Longo Prazo (3-6 meses)
1. **Funcionalidades de IA**: Machine Learning integrado
2. **API P√∫blica**: Endpoints para terceiros
3. **Mobile App**: Aplicativo nativo

---

**Status Geral**: O projeto est√° **85% completo** com todas as funcionalidades core implementadas e funcionais. O sistema j√° est√° pronto para uso em produ√ß√£o, com melhorias cont√≠nuas sendo desenvolvidas.

---

‚ö†Ô∏è **Nota Importante**: Todo o projeto deve ser totalmente configurado e constru√≠do usando **PT-BR (Portugu√™s - Brasil)** como idioma padr√£o para configura√ß√£o, c√≥digo-fonte e documenta√ß√£o.